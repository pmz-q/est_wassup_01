시군구 데이터 사용을 하지 않고 country wide accident 데이터를 사용함
데이터 용량을 키움

experiment 1 과 2 에서의 세팅과 같게 했을때 수렴을 일찍 함.
그래서 네트워크를 키워보기로 결정, 


  0%|                                                                                                                                                                                                                                                | 0/20 [00:00<?, ?it/s]/home/sdk/miniconda3/envs/MathAI/lib/python3.10/site-packages/torch/autograd/__init__.py:251: UserWarning: CUDA initialization: The NVIDIA driver on your system is too old (found version 11040). Please update your GPU driver by downloading and installing a new version from the URL: http://www.nvidia.com/Download/index.aspx Alternatively, go to: https://pytorch.org to install a PyTorch version that has been compiled with your version of the CUDA driver. (Triggered internally at ../c10/cuda/CUDAFunctions.cpp:108.)
  Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
tensor(0.4681)
tensor(0.4594)
  5%|██████████                                                                                                                                                                                              | 1/20 [00:36<11:40, 36.89s/it, trn_rmse=0.468, val_rmse=0.459]tensor(0.4462)
tensor(0.4599)
 10%|████████████████████                                                                                                                                                                                     | 2/20 [01:14<11:13, 37.39s/it, trn_rmse=0.446, val_rmse=0.46]tensor(0.4456)
tensor(0.4595)
 15%|██████████████████████████████                                                                                                                                                                          | 3/20 [01:51<10:30, 37.07s/it, trn_rmse=0.446, val_rmse=0.459]tensor(0.4455)
tensor(0.4598)
 20%|████████████████████████████████████████▏                                                                                                                                                                | 4/20 [02:28<09:55, 37.24s/it, trn_rmse=0.445, val_rmse=0.46]tensor(0.4455)
tensor(0.4596)
 25%|██████████████████████████████████████████████████▎                                                                                                                                                      | 5/20 [03:06<09:18, 37.25s/it, trn_rmse=0.445, val_rmse=0.46]tensor(0.4455)
tensor(0.4596)
 30%|████████████████████████████████████████████████████████████▎                                                                                                                                            | 6/20 [03:44<08:46, 37.57s/it, trn_rmse=0.446, val_rmse=0.46]tensor(0.4455)
tensor(0.4597)
 35%|██████████████████████████████████████████████████████████████████████▎                                                                                                                                  | 7/20 [04:24<08:21, 38.58s/it, trn_rmse=0.446, val_rmse=0.46]tensor(0.4455)
tensor(0.4603)
 40%|████████████████████████████████████████████████████████████████████████████████▍                                                                                                                        | 8/20 [05:03<07:42, 38.56s/it, trn_rmse=0.445, val_rmse=0.46]tensor(0.4455)
tensor(0.4597)
 45%|██████████████████████████████████████████████████████████████████████████████████████████▍                                                                                                              | 9/20 [05:42<07:06, 38.76s/it, trn_rmse=0.445, val_rmse=0.46]tensor(0.4455)
tensor(0.4597)
 50%|████████████████████████████████████████████████████████████████████████████████████████████████████                                                                                                    | 10/20 [06:22<06:29, 38.95s/it, trn_rmse=0.446, val_rmse=0.46]tensor(0.4456)
tensor(0.4597)
 55%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████                                                                                          | 11/20 [07:01<05:51, 39.11s/it, trn_rmse=0.446, val_rmse=0.46]tensor(0.4455)
tensor(0.4598)
 60%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████                                                                                | 12/20 [07:40<05:13, 39.19s/it, trn_rmse=0.445, val_rmse=0.46]tensor(0.4455)
tensor(0.4601)
 65%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████                                                                      | 13/20 [08:19<04:33, 39.11s/it, trn_rmse=0.446, val_rmse=0.46]tensor(0.4455)
tensor(0.4597)
 70%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████                                                            | 14/20 [08:59<03:56, 39.42s/it, trn_rmse=0.446, val_rmse=0.46] 70%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████                                                            | 14/20 [09:14<03:57, 39.57s/it, trn_rmse=0.446, val_rmse=0.46]


['사고일시', '요일', '기상상태', '도로형태', '노면상태', '사고유형']


# ['사고일시', '요일', '기상상태', '시군구', '도로형태', '노면상태', '사고유형']
  # 사고일시 yyyy-mm-dd hh datetime - 시간 컬럼 생성
  if '사고일시' in X_df.columns:
    X_df['시간'] = X_df['사고일시'].str.split(' ').str[-1].astype(int)
    X_df.drop(columns=['사고일시'], inplace=True)
  
  # 도로형태 e.g. 교차로 - 교차로안 -> 도로형태와 세부도로형태로 분리
  if '도로형태' in X_df.columns:
    X_df[['도로형태-1', '도로형태-2']] = X_df['도로형태'].str.split(' - ', expand=True)
    X_df.drop(columns=['도로형태'], inplace=True)
  
  # 시군구 대전데이터 한정으로, 군, 동 정보만 남긴다.
  if '시군구' in X_df.columns:
    # 군, 구(동)
    X_df[['군', '구(동)']] = X_df['시군구'].str.split(' ', expand=True)[[1,2]]
    X_df.drop(columns=['시군구'], inplace=True)
    
    # df_test 의 unique values 와 df_train 의 unique values 가 다르므로 우선 제외시킴
    X_df.drop(columns=['구(동)'], inplace=True)
  
  if '노면상태' in X_df.columns:
    # 건조 젖음/습기 기타 서리/결빙 침수 적설
    X_df['노면상태'] = X_df['노면상태'].map(lambda x: 
      0 if x == '건조' else
      1 if x == '기타' else
      2 if x == '젖음/습기' else
      3 if x == '서리/결빙' else
      4
    )
  
  if '기상상태' in X_df.columns:
    # 맑음 비 흐림 기타 눈
    X_df['기상상태'] = X_df['기상상태'].map(lambda x: 
      0 if x == '맑음' else
      1 if x == '기타' else
      2 if x == '흐림' else
      3 if x == '비' else
      4
    )
  
  if '요일' in X_df.columns:
    # 월 화 수 목 금 토 일
    X_df['요일'] = X_df['요일'].map(lambda x: 
      0 if x == '월' else
      1 if x == '화' else
      2 if x == '수' else
      3 if x == '목' else
      4 if x == '금' else
      5 if x == '토' else
      6
    )





 config = {
  'input_files': {
    'X_csv': './data/features/train_X.csv',
    'y_csv': './data/features/train_target.csv',
    'tst_csv': './data/features/test_X.csv',
  },
  'output_files': {
    'output_train': f'./histories/{EXPERIMENT_NAME}/model.pth',
    'output_eval': f'./histories/{EXPERIMENT_NAME}/eval.csv',
    'output_pred': f'./histories/{EXPERIMENT_NAME}/pred.csv'
  },
  'model': ANN,
  'model_params': {
    'input_dim': 'auto', # Always will be determined by the data shape
    'hidden_dim': [128, 128, 128], # 64 -> 128
    'use_drop': True,
    'drop_ratio': 0.7,
    'activation': 'relu',
  },
  'train_params': {
    'loss': RMSLELoss(),
    'optim': torch.optim.Adam,
    # 'metric': torchmetrics.MeanSquaredError(squared=False),
    'metric': RootMeanSquaredLogError(),
    'device': 'cpu',
    'epochs': 20,
    'data_loader_params': {
      'batch_size': 32,
    },
    'optim_params': {
      'lr': 0.001,
    },
  },
  'cv_params':{
    'n_split': 5,
  },
}


 0%|                                                                                                                                                                                                                                                | 0/20 [00:00<?, ?it/s]/home/sdk/miniconda3/envs/MathAI/lib/python3.10/site-packages/torch/autograd/__init__.py:251: UserWarning: CUDA initialization: The NVIDIA driver on your system is too old (found version 11040). Please update your GPU driver by downloading and installing a new version from the URL: http://www.nvidia.com/Download/index.aspx Alternatively, go to: https://pytorch.org to install a PyTorch version that has been compiled with your version of the CUDA driver. (Triggered internally at ../c10/cuda/CUDAFunctions.cpp:108.)
  Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
tensor(0.4623)
tensor(0.4582)
  5%|██████████                                                                                                                                                                                              | 1/20 [00:47<14:53, 47.03s/it, trn_rmse=0.462, val_rmse=0.458]tensor(0.4467)
tensor(0.4591)
 10%|████████████████████                                                                                                                                                                                    | 2/20 [01:30<13:32, 45.13s/it, trn_rmse=0.447, val_rmse=0.459]tensor(0.4453)
tensor(0.4597)
 15%|██████████████████████████████▏                                                                                                                                                                          | 3/20 [02:09<11:55, 42.10s/it, trn_rmse=0.445, val_rmse=0.46]tensor(0.4454)
tensor(0.4594)
 20%|████████████████████████████████████████                                                                                                                                                                | 4/20 [02:47<10:49, 40.59s/it, trn_rmse=0.445, val_rmse=0.459]tensor(0.4454)
tensor(0.4600)
 25%|██████████████████████████████████████████████████▎                                                                                                                                                      | 5/20 [03:25<09:56, 39.79s/it, trn_rmse=0.445, val_rmse=0.46] 25%|██████████████████████████████████████████████████▎                                                                                                                                                      | 5/20 [04:04<12:13, 48.88s/it, trn_rmse=0.445, val_rmse=0.46]

 너무 일찍 수렴해버려서 learning rate 1/100 줄여서 다시 해봅니다....


lr 을 0.00001 로 두고 20에폭으로 했더니
수렴을 살짝 덜 하나 싶어서 50에폭으로 다시 돌려봐야 할 것 같다.


 ensor(0.4438)
  5%|██████                                                                                                                  | 1/20 [00:29<09:24, 29.71s/it, trn_rmse=0.505, val_rmse=0.444]tensor(0.4642)
tensor(0.4403)
 10%|████████████                                                                                                             | 2/20 [01:00<09:04, 30.27s/it, trn_rmse=0.464, val_rmse=0.44]tensor(0.4597)
tensor(0.4392)
 15%|██████████████████▏                                                                                                      | 3/20 [01:31<08:42, 30.71s/it, trn_rmse=0.46, val_rmse=0.439]tensor(0.4573)
tensor(0.4386)
 20%|████████████████████████                                                                                                | 4/20 [02:03<08:15, 30.98s/it, trn_rmse=0.457, val_rmse=0.439]tensor(0.4562)
tensor(0.4384)
 25%|██████████████████████████████                                                                                          | 5/20 [02:34<07:49, 31.33s/it, trn_rmse=0.456, val_rmse=0.438]tensor(0.4550)
tensor(0.4382)
 30%|████████████████████████████████████                                                                                    | 6/20 [03:08<07:26, 31.92s/it, trn_rmse=0.455, val_rmse=0.438]tensor(0.4545)
tensor(0.4383)
 35%|██████████████████████████████████████████                                                                              | 7/20 [03:41<07:01, 32.45s/it, trn_rmse=0.454, val_rmse=0.438]tensor(0.4536)
tensor(0.4382)
 40%|████████████████████████████████████████████████                                                                        | 8/20 [04:15<06:35, 32.98s/it, trn_rmse=0.454, val_rmse=0.438]tensor(0.4530)
tensor(0.4386)
 45%|██████████████████████████████████████████████████████                                                                  | 9/20 [04:50<06:07, 33.45s/it, trn_rmse=0.453, val_rmse=0.439]tensor(0.4524)
tensor(0.4382)
 50%|███████████████████████████████████████████████████████████▌                                                           | 10/20 [05:24<05:38, 33.83s/it, trn_rmse=0.452, val_rmse=0.438]tensor(0.4521)
tensor(0.4382)
 55%|█████████████████████████████████████████████████████████████████▍                                                     | 11/20 [05:59<05:07, 34.14s/it, trn_rmse=0.452, val_rmse=0.438]tensor(0.4517)
tensor(0.4382)
 60%|███████████████████████████████████████████████████████████████████████▍                                               | 12/20 [06:35<04:36, 34.56s/it, trn_rmse=0.452, val_rmse=0.438]tensor(0.4513)
tensor(0.4381)
 65%|█████████████████████████████████████████████████████████████████████████████▎                                         | 13/20 [07:10<04:03, 34.78s/it, trn_rmse=0.451, val_rmse=0.438]tensor(0.4511)
tensor(0.4383)
 70%|███████████████████████████████████████████████████████████████████████████████████▎                                   | 14/20 [07:48<03:34, 35.76s/it, trn_rmse=0.451, val_rmse=0.438]tensor(0.4509)
tensor(0.4380)
 75%|█████████████████████████████████████████████████████████████████████████████████████████▎                             | 15/20 [08:24<02:59, 35.97s/it, trn_rmse=0.451, val_rmse=0.438]tensor(0.4506)
tensor(0.4381)
 80%|███████████████████████████████████████████████████████████████████████████████████████████████▏                       | 16/20 [09:00<02:23, 35.87s/it, trn_rmse=0.451, val_rmse=0.438]tensor(0.4505)
tensor(0.4380)
 85%|█████████████████████████████████████████████████████████████████████████████████████████████████████▏                 | 17/20 [09:37<01:48, 36.07s/it, trn_rmse=0.451, val_rmse=0.438]tensor(0.4504)
tensor(0.4381)
 90%|████████████████████████████████████████████████████████████████████████████████████████████████████████████            | 18/20 [10:13<01:12, 36.17s/it, trn_rmse=0.45, val_rmse=0.438]tensor(0.4503)
tensor(0.4379)
 95%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████      | 19/20 [10:49<00:36, 36.10s/it, trn_rmse=0.45, val_rmse=0.438]tensor(0.4501)
tensor(0.4380)
100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [11:25<00:00, 34.26s/it, trn_rmse=0.45, val_rmse=0.438]

아닌가...

0%|                                                                                                                                                                                                                                                | 0/20 [00:00<?, ?it/s]tensor(0.5146)
tensor(0.4344)
  5%|██████████                                                                                                                                                                                              | 1/20 [00:30<09:32, 30.12s/it, trn_rmse=0.515, val_rmse=0.434]tensor(0.4660)
tensor(0.4329)
 10%|████████████████████                                                                                                                                                                                    | 2/20 [01:00<09:09, 30.54s/it, trn_rmse=0.466, val_rmse=0.433]tensor(0.4609)
tensor(0.4328)
 15%|██████████████████████████████                                                                                                                                                                          | 3/20 [01:33<08:52, 31.30s/it, trn_rmse=0.461, val_rmse=0.433]tensor(0.4591)
tensor(0.4327)
 20%|████████████████████████████████████████                                                                                                                                                                | 4/20 [02:06<08:35, 32.24s/it, trn_rmse=0.459, val_rmse=0.433]tensor(0.4576)
tensor(0.4326)
 25%|██████████████████████████████████████████████████                                                                                                                                                      | 5/20 [02:41<08:14, 32.97s/it, trn_rmse=0.458, val_rmse=0.433]tensor(0.4565)
tensor(0.4325)
 30%|████████████████████████████████████████████████████████████                                                                                                                                            | 6/20 [03:14<07:45, 33.23s/it, trn_rmse=0.457, val_rmse=0.433]tensor(0.4554)
tensor(0.4326)
 35%|██████████████████████████████████████████████████████████████████████                                                                                                                                  | 7/20 [03:49<07:17, 33.65s/it, trn_rmse=0.455, val_rmse=0.433]tensor(0.4545)
tensor(0.4326)
 40%|████████████████████████████████████████████████████████████████████████████████                                                                                                                        | 8/20 [04:22<06:43, 33.59s/it, trn_rmse=0.454, val_rmse=0.433]tensor(0.4540)
tensor(0.4326)
 45%|██████████████████████████████████████████████████████████████████████████████████████████                                                                                                              | 9/20 [04:56<06:11, 33.77s/it, trn_rmse=0.454, val_rmse=0.433]tensor(0.4532)
tensor(0.4326)
 50%|███████████████████████████████████████████████████████████████████████████████████████████████████▌                                                                                                   | 10/20 [05:31<05:39, 33.99s/it, trn_rmse=0.453, val_rmse=0.433]tensor(0.4530)
tensor(0.4326)
 55%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████▍                                                                                         | 11/20 [06:06<05:08, 34.24s/it, trn_rmse=0.453, val_rmse=0.433]tensor(0.4526)
tensor(0.4326)
 60%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▍                                                                               | 12/20 [06:40<04:34, 34.36s/it, trn_rmse=0.453, val_rmse=0.433]tensor(0.4523)
tensor(0.4325)
 65%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎                                                                     | 13/20 [07:17<04:04, 34.89s/it, trn_rmse=0.452, val_rmse=0.433]tensor(0.4520)
tensor(0.4326)
 70%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎                                                           | 14/20 [07:53<03:32, 35.38s/it, trn_rmse=0.452, val_rmse=0.433]tensor(0.4517)
tensor(0.4326)
 75%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎                                                 | 15/20 [08:29<02:58, 35.61s/it, trn_rmse=0.452, val_rmse=0.433]tensor(0.4515)
tensor(0.4325)
 80%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▏                                       | 16/20 [09:04<02:21, 35.33s/it, trn_rmse=0.451, val_rmse=0.433]tensor(0.4513)
tensor(0.4325)
 85%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▏                             | 17/20 [09:39<01:45, 35.14s/it, trn_rmse=0.451, val_rmse=0.433]tensor(0.4510)
tensor(0.4325)
 90%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████                    | 18/20 [10:13<01:10, 35.03s/it, trn_rmse=0.451, val_rmse=0.432]tensor(0.4510)
tensor(0.4325)
 95%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████          | 19/20 [10:48<00:34, 34.99s/it, trn_rmse=0.451, val_rmse=0.432]tensor(0.4508)
tensor(0.4325)
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [11:25<00:00, 34.26s/it, trn_rmse=0.451, val_rmse=0.432]
     